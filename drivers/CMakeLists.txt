# SPDX-License-Identifier: Apache-2.0

target_sources(mbed_os PRIVATE internal/AsyncOp.h)
target_sources(mbed_os PRIVATE internal/ByteBuffer.h)
target_sources(mbed_os PRIVATE internal/EndpointResolver.h)
target_sources(mbed_os PRIVATE internal/LinkedList.h)
target_sources(mbed_os PRIVATE internal/LinkedListBase.h)
target_sources(mbed_os PRIVATE internal/LinkEntry.h)
target_sources(mbed_os PRIVATE internal/MIDIMessage.h)
target_sources(mbed_os PRIVATE internal/OperationList.h)
target_sources(mbed_os PRIVATE internal/OperationListBase.h)
target_sources(mbed_os PRIVATE internal/PolledQueue.h)
target_sources(mbed_os PRIVATE internal/SFDP.h)
target_sources(mbed_os PRIVATE internal/Task.h)
target_sources(mbed_os PRIVATE internal/TaskBase.h)
target_sources(mbed_os PRIVATE internal/TaskQueue.h)
target_sources(mbed_os PRIVATE internal/USBAudio_Types.h)
target_sources(mbed_os PRIVATE internal/USBDescriptor.h)
target_sources(mbed_os PRIVATE internal/USBDevice.h)
target_sources(mbed_os PRIVATE internal/USBDevice_Types.h)
target_sources(mbed_os PRIVATE internal/USBHID_Types.h)

target_sources(mbed_os PRIVATE source/AnalogIn.cpp)
target_sources(mbed_os PRIVATE source/AnalogOut.cpp)
target_sources(mbed_os PRIVATE source/BufferedSerial.cpp)
target_sources(mbed_os PRIVATE source/BusIn.cpp)
target_sources(mbed_os PRIVATE source/BusInOut.cpp)
target_sources(mbed_os PRIVATE source/BusOut.cpp)
target_sources(mbed_os PRIVATE source/CAN.cpp)
target_sources(mbed_os PRIVATE source/DigitalIn.cpp)
target_sources(mbed_os PRIVATE source/DigitalInOut.cpp)
target_sources(mbed_os PRIVATE source/DigitalOut.cpp)
target_sources(mbed_os PRIVATE source/FlashIAP.cpp)
target_sources(mbed_os PRIVATE source/I2C.cpp)
target_sources(mbed_os PRIVATE source/I2CSlave.cpp)
target_sources(mbed_os PRIVATE source/InterruptIn.cpp)
target_sources(mbed_os PRIVATE source/MbedCRC.cpp)
target_sources(mbed_os PRIVATE source/PortIn.cpp)
target_sources(mbed_os PRIVATE source/PortInOut.cpp)
target_sources(mbed_os PRIVATE source/PortOut.cpp)
target_sources(mbed_os PRIVATE source/PwmOut.cpp)
target_sources(mbed_os PRIVATE source/QSPI.cpp)
target_sources(mbed_os PRIVATE source/RawSerial.cpp)
target_sources(mbed_os PRIVATE source/ResetReason.cpp)
target_sources(mbed_os PRIVATE source/Serial.cpp)
target_sources(mbed_os PRIVATE source/Serial.cpp)
target_sources(mbed_os PRIVATE source/SerialWireOutput.cpp)
target_sources(mbed_os PRIVATE source/SFDP.cpp)
target_sources(mbed_os PRIVATE source/SPI.cpp)
target_sources(mbed_os PRIVATE source/SPISlave.cpp)
target_sources(mbed_os PRIVATE source/Timeout.cpp)
target_sources(mbed_os PRIVATE source/Timer.cpp)
target_sources(mbed_os PRIVATE source/TimerEvent.cpp)
target_sources(mbed_os PRIVATE source/UARTSerial.cpp)
target_sources(mbed_os PRIVATE source/UnbufferedSerial.cpp)
target_sources(mbed_os PRIVATE source/Watchdog.cpp)
target_sources(mbed_os PRIVATE source/Watchdog.cpp)

#target_sources(mbed_os PRIVATE source/usb/AsyncOp.cpp)
#target_sources(mbed_os PRIVATE source/usb/ByteBuffer.cpp)
#target_sources(mbed_os PRIVATE source/usb/EndpointResolver.cpp)
#target_sources(mbed_os PRIVATE source/usb/LinkedListBase.cpp)
#target_sources(mbed_os PRIVATE source/usb/OperationListBase.cpp)
#target_sources(mbed_os PRIVATE source/usb/PolledQueue.cpp)
#target_sources(mbed_os PRIVATE source/usb/TaskBase.cpp)
#target_sources(mbed_os PRIVATE source/usb/USBAudio.cpp)
#target_sources(mbed_os PRIVATE source/usb/USBCDC.cpp)
#target_sources(mbed_os PRIVATE source/usb/USBCDC_ECM.cpp)
#target_sources(mbed_os PRIVATE source/usb/USBDevice.cpp)
#target_sources(mbed_os PRIVATE source/usb/USBHID.cpp)
#target_sources(mbed_os PRIVATE source/usb/USBKeyboard.cpp)
#target_sources(mbed_os PRIVATE source/usb/USBMIDI.cpp)
#target_sources(mbed_os PRIVATE source/usb/USBMouse.cpp)
#target_sources(mbed_os PRIVATE source/usb/USBMouseKeyboard.cpp)
#target_sources(mbed_os PRIVATE source/usb/USBMSD.cpp)
#target_sources(mbed_os PRIVATE source/usb/USBSerial.cpp)

target_include_directories(mbed_os PUBLIC .)
target_include_directories(mbed_os PUBLIC internal)
